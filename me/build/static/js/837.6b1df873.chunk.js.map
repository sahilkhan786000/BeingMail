{"version":3,"file":"static/js/837.6b1df873.chunk.js","mappings":"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","sources":["services/api.js","hooks/useApi.jsx","components/Header.jsx","components/ComposeMail.jsx","config/sidebar.config.js","components/SideBarContent.jsx","components/Sidebar.jsx","pages/Home.jsx","services/api.urls.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n//const API_URI = 'http://mail-api.onrender.com'\r\n// const API_URI = 'http://localhost:8080'\r\nconst API_URI = ''\r\nconst API_GMAIL = async (serviceUrlObject, requestData = {}, type) => {\r\n    const { params, urlParams, ...body } = requestData;\r\n\r\n    return await axios({\r\n        method: serviceUrlObject.method,\r\n        url: `${API_URI}/${serviceUrlObject.endpoint}/${type}`,\r\n        data: requestData\r\n    })\r\n}\r\n\r\nexport default API_GMAIL;","import { useState } from 'react';\r\nimport API from '../services/api';\r\n\r\nconst useApi = (urlObject) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const call = async (payload, type = '') => {\r\n        setResponse(null);\r\n        setIsLoading(true);\r\n        setError(\"\");\r\n        \r\n        try {\r\n            let res = await API(urlObject, payload, type);\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return { call, response, error, isLoading };\r\n}\r\n\r\nexport default useApi;","import React from 'react'\r\nimport '../index.css'\r\nimport {AppBar, Toolbar, InputBase, Box} from '@mui/material';\r\nimport {Menu as MenuIcon} from '@mui/icons-material';\r\nimport url from '../constants/g.png';\r\nimport TuneIcon from '@mui/icons-material/Tune';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst clientId = \"948928666031-0lt8hmp6t35n241unve74gnl061hcnpd.apps.googleusercontent.com\"; // Replace with your actual Google Client ID\r\n\r\nconst txt = 'mAiL';\r\n\r\nexport default function Header({toggleDrawer}) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogOut = () =>{\r\n   \r\n    navigate(\"/\");\r\n  }\r\n  // const { signOut } = useGoogleLogout({\r\n  //   clientId,\r\n  //   onLogoutSuccess: () => {\r\n  //     console.log('Logout successful');\r\n  //     // Perform any additional cleanup or actions on logout if needed\r\n  //     localStorage.removeItem('email');\r\n  //     localStorage.removeItem('authToken');\r\n  //     navigate('/');\r\n  //   },\r\n  //   onFailure: () => {\r\n  //     console.log('Logout failed');\r\n  //     navigate('/')\r\n  //    alert(\"LogOut Failure\");\r\n  //   },\r\n  // });\r\n\r\n\r\n  return (\r\n    <AppBar position = \"static\">\r\n        <Toolbar>\r\n            <MenuIcon  onClick= {toggleDrawer}/>\r\n            <Box style = {{ display: 'flex', alignItems: 'center' }}> \r\n            <img src = {url} alt = \"logo\" style = {{width :110 ,height: 90, marginLeft :2}}/>\r\n             {txt}\r\n             </Box>\r\n            <Box sx = {{\r\n                backgroundColor:\"#49dcf2\",\r\n                marginLeft : 30,\r\n                minWidth : 690,\r\n                maxWidth : 720,\r\n                height : 48,\r\n                display : 'flex',\r\n                alignItems : 'center',\r\n                justifyContent : 'space-between',\r\n                padding : '0 20px',\r\n                borderRadius : '5px',\r\n                '& > div':{\r\n                  width : '100%',\r\n                  padding : '0 10px'\r\n                }\r\n\r\n            }}>\r\n            <SearchIcon/>\r\n            <InputBase \r\n            placeholder = 'Search Emails'\r\n             style={{\r\n    backgroundColor: 'white',\r\n    borderRadius: '5px',\r\n  }}/>\r\n\r\n            <TuneIcon/>\r\n\r\n            </Box>\r\n\r\n            <Box sx = {{\r\n\r\n                width : '100%',\r\n                display : 'flex',\r\n                alignItems : 'center',\r\n                justifyContent : 'end',\r\n                '& > svg ' : {\r\n                  marginLeft : 5\r\n                }\r\n               \r\n\r\n            }}>\r\n           \r\n            </Box>\r\n          \r\n            <button className=\"m-3 btn btn-success\" onClick={handleLogOut} >\r\n            LogOut\r\n          </button>\r\n        </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import { useState } from 'react';\r\nimport { Dialog, styled, Typography, Box, InputBase, TextField, Button } from '@mui/material'; \r\nimport { Close, DeleteOutline } from '@mui/icons-material';\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api.urls';\r\n\r\nconst dialogStyle = {\r\n    height: '90%',\r\n    width: '80%',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    boxShadow: 'none',\r\n    borderRadius: '10px 10px 0 0',\r\n}\r\n\r\n\r\n\r\nconst Header = styled(Box)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 15px;\r\n    background: #f2f6fc;\r\n    & > p {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n    }`;\r\n\r\n\r\nconst RecipientWrapper = styled(Box)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 15px;\r\n    & > div {\r\n        font-size: 14px;\r\n        border-bottom: 1px solid #F5F5F5;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\n\r\nconst Footer = styled(Box)`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 15px;\r\n    align-items: center;\r\n`;\r\n\r\nconst SendButton = styled(Button)`\r\n    background: #0B57D0;\r\n    color: #fff;\r\n    font-weight: 500;\r\n    text-transform: none;\r\n    border-radius: 18px;\r\n    width: 100px;\r\n`\r\n\r\n const ComposeMail = ({ openDialog, setOpenDialog }) => {\r\n    const [data, setData] = useState({});\r\n    const sentEmailService = useApi(API_URLS.saveSentEmails);\r\n    const saveDraftService = useApi(API_URLS.saveDraftEmails);\r\n\r\n    const config = {\r\n        Username: process.env.REACT_APP_USERNAME,\r\n        Password: process.env.REACT_APP_PASSWORD,\r\n        Host: 'smtp.elasticemail.com',\r\n        Port: 2525,\r\n    }\r\n\r\n   \r\n    if(window.googleEmail !== \"\"){\r\n        window.userEmail = window.googleEmail\r\n    }\r\n    const sendEmail = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (window.Email) {\r\n            window.Email.send({\r\n                ...config,\r\n                To : data.to,\r\n                From : window.userEmail ,\r\n                Subject : data.subject,\r\n                Body : data.body\r\n            }).then(\r\n                message => alert(message)\r\n            );\r\n        }\r\n\r\n        const payload = {\r\n            to : data.to,\r\n            from : window.userEmail ,\r\n            subject : data.subject,\r\n            body : data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'mAiL',\r\n            starred: false,\r\n            type: 'sent'\r\n        }\r\n\r\n        sentEmailService.call(payload);\r\n\r\n        if (!sentEmailService.error) {\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n\r\n        }\r\n        setOpenDialog(false);\r\n     }\r\n\r\n     const onValueChange = (e) => {\r\n        setData({ ...data, [e.target.name]: e.target.value })\r\n    }\r\n\r\n   const closeComposeMail = (e) => {\r\n        e.preventDefault();\r\n\r\n        const payload = {\r\n            to : data.to,\r\n            from : window.userEmail ,\r\n            subject : data.subject,\r\n            body : data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'mAiL',\r\n            starred: false,\r\n            type: 'drafts'\r\n        }\r\n\r\n        saveDraftService.call(payload);\r\n\r\n        if (!saveDraftService.error) {\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n\r\n        }\r\n\r\n    setOpenDialog(false);\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={openDialog}\r\n            PaperProps={{ sx: dialogStyle }}\r\n        >\r\n            <Header>\r\n                <Typography>New Message</Typography>\r\n                <Close fontSize=\"small\" onClick={(e) => closeComposeMail(e)} />\r\n                \r\n            </Header>\r\n            <RecipientWrapper>\r\n                \r\n                <InputBase placeholder= {window.userEmail} />\r\n                <InputBase placeholder='Recipients' name=\"to\" onChange={(e) => onValueChange(e)} value={data.to} />\r\n                <InputBase placeholder='Subject' name=\"subject\" onChange={(e) => onValueChange(e)} value={data.subject} />\r\n            </RecipientWrapper>\r\n            <TextField \r\n                multiline\r\n                rows={20}\r\n                sx={{ '& .MuiOutlinedInput-notchedOutline': { border: 'none' } }}\r\n                name=\"body\"\r\n                onChange={(e) => onValueChange(e)}\r\n                value={data.body}\r\n            />\r\n            <Footer>\r\n                <SendButton onClick={(e) => sendEmail(e)}>Send</SendButton>\r\n                <DeleteOutline onClick={() => setOpenDialog(false)} />\r\n            </Footer>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ComposeMail;","\r\n//import { routes } from \"../routes/routes\"\r\nimport { Photo, StarOutline, SendOutlined, InsertDriveFileOutlined, DeleteOutlined,\r\n    MailOutlined } from '@mui/icons-material';\r\n\r\nexport const SIDEBAR_DATA = [\r\n    {\r\n        name: 'inbox',\r\n        title: 'Inbox',\r\n        icon: Photo,\r\n        //path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'starred',\r\n        title: 'Starred',\r\n        icon: StarOutline,\r\n        //path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'sent',\r\n        title: 'Sent',\r\n        icon: SendOutlined,\r\n        //path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'drafts',\r\n        title: 'Drafts',\r\n        icon: InsertDriveFileOutlined,\r\n      //  path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'bin',\r\n        title: 'Bin',\r\n        icon: DeleteOutlined,\r\n        //path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'allmail',\r\n        title: 'All Mail',\r\n        icon: MailOutlined,\r\n        //path: routes.emails.path\r\n    }\r\n];","import { useState } from 'react';\r\nimport { Button, List, ListItem, Box, styled } from '@mui/material';\r\nimport ComposeMail from './ComposeMail';\r\nimport { SIDEBAR_DATA } from '../config/sidebar.config';\r\nimport { CreateOutlined } from '@mui/icons-material';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { routes } from '../routes/routes';\r\n\r\nconst Container = styled(Box)`\r\n  padding: 20px 0 0 30px ;\r\n  & > ul {\r\n    padding: 15px 0 0 15px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    & > a {\r\n      text-decoration: none;\r\n      color: white;\r\n      \r\n    }\r\n    & > a > li > svg {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ComposeButton = styled(Button)`\r\n  /*background: #c2e7ff;*/\r\n  background : white;\r\n  color: #1976d2;\r\n  border-radius: 16px;\r\n  padding: 15px;\r\n  min-width: 140px;\r\n  text-transform: none;\r\n  \r\n`;\r\n\r\n\r\nconst SideBarContent = () => {\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const { type } = useParams();\r\n\r\n  const onComposeClick = () => {\r\n      setOpenDialog(true);\r\n  }\r\n\r\n  return (\r\n      <Container>\r\n          <ComposeButton onClick={() => onComposeClick()}>\r\n              <CreateOutlined style={{ marginRight: 10 }} />Compose\r\n          </ComposeButton>\r\n          <List>\r\n              {\r\n                  SIDEBAR_DATA.map(data => (\r\n                      <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\r\n                          <ListItem style={ type === data.name.toLowerCase() ? {\r\n                              backgroundColor: '#d3e3fd',\r\n                              borderRadius: '0 16px 16px 0'\r\n                          } : {}}><data.icon fontSize=\"small\" />{data.title}</ListItem>\r\n                      </NavLink>\r\n                  ))\r\n              }\r\n          </List>\r\n          <ComposeMail openDialog={openDialog} setOpenDialog={setOpenDialog} />\r\n      </Container>\r\n  )\r\n}\r\n\r\nexport default SideBarContent;","\r\nimport { Drawer, styled } from \"@mui/material\";\r\n\r\nimport SideBarContent from \"./SideBarContent\";\r\n\r\nconst StyledDrawer = styled(Drawer)`\r\n    margin-top: 100px;\r\n`\r\n\r\nconst SideBar = ({openDrawer}) => {\r\n\r\n   \r\n\r\n    return (\r\n        <StyledDrawer\r\n            anchor='left'\r\n            open={openDrawer}\r\n           // onClose={toggleDrawer}\r\n            hideBackdrop={true}\r\n            ModalProps={{\r\n                keepMounted: true,\r\n            }}\r\n            variant=\"persistent\"\r\n            sx={{\r\n                '& .MuiDrawer-paper': { \r\n                    width: 250,\r\n                    borderRight: 'none',\r\n                    background: '#1976d2',\r\n                    marginTop: '90px',\r\n                    height: 'calc(100vh - 90px)'\r\n                },\r\n            }}\r\n          >\r\n            <SideBarContent />\r\n        </StyledDrawer>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport SideBar from '../components/Sidebar'\r\nimport { useState, Suspense } from 'react';\r\nimport { Box, styled } from '@mui/material';\r\nimport { Outlet } from 'react-router-dom';\r\nimport SuspenseLoader from '../components/common/SuspenseLoader';\r\n\r\n\r\nconst Wrapper = styled(Box)`\r\n    display: flex;\r\n`;\r\n\r\nconst Home = () => {\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(prevState => !prevState);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Header toggleDrawer={toggleDrawer} />\r\n            <Wrapper>\r\n                <SideBar openDrawer={openDrawer} />\r\n                <Suspense fallback={<SuspenseLoader />} >\r\n                    <Outlet context={{ openDrawer }} />\r\n                </Suspense>\r\n            </Wrapper>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","export const API_URLS = {\r\n    saveSentEmails: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    deleteEmails: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST'\r\n    }\r\n}"],"names":["async","serviceUrlObject","requestData","arguments","length","undefined","type","params","urlParams","body","axios","method","url","concat","endpoint","data","urlObject","response","setResponse","useState","error","setError","isLoading","setIsLoading","call","payload","res","API","message","Header","_ref","toggleDrawer","navigate","useNavigate","_jsx","AppBar","position","children","_jsxs","Toolbar","MenuIcon","onClick","Box","style","display","alignItems","src","alt","width","height","marginLeft","sx","backgroundColor","minWidth","maxWidth","justifyContent","padding","borderRadius","SearchIcon","InputBase","placeholder","TuneIcon","className","handleLogOut","dialogStyle","maxHeight","boxShadow","styled","_templateObject","_taggedTemplateLiteral","RecipientWrapper","_templateObject2","Footer","_templateObject3","SendButton","Button","_templateObject4","openDialog","setOpenDialog","setData","sentEmailService","useApi","API_URLS","saveSentEmails","saveDraftService","saveDraftEmails","config","Username","process","Password","Host","Port","window","googleEmail","userEmail","onValueChange","e","target","name","value","Dialog","open","PaperProps","Typography","Close","fontSize","preventDefault","to","from","subject","date","Date","image","starred","closeComposeMail","onChange","TextField","multiline","rows","border","Email","send","To","From","Subject","Body","then","alert","sendEmail","DeleteOutline","SIDEBAR_DATA","title","icon","Photo","StarOutline","SendOutlined","InsertDriveFileOutlined","DeleteOutlined","MailOutlined","Container","ComposeButton","SideBarContent","useParams","CreateOutlined","marginRight","List","map","NavLink","routes","emails","path","ListItem","toLowerCase","ComposeMail","StyledDrawer","Drawer","openDrawer","anchor","hideBackdrop","ModalProps","keepMounted","variant","borderRight","background","marginTop","Wrapper","Home","setOpenDrawer","_Fragment","prevState","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","getEmailFromType","toggleStarredMails","deleteEmails","moveEmailsToBin"],"sourceRoot":""}